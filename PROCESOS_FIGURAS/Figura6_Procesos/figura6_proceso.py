# -*- coding: utf-8 -*-
"""FIGURA6_proceso.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1hsaezs6yvs9F3Ja2_Frq2MUnTEHmbKu2

# Librerias y conexión a drive
"""

# Commented out IPython magic to ensure Python compatibility.
# %%capture
# !pip install netcdf4
# !pip install geopandas

import matplotlib.pyplot as plt
import xarray as xr
import pandas as pd
import numpy as np
import geopandas as gpd

from google.colab import drive
drive.mount('/content/drive')

"""# Abriendo netCDF"""

ruta_tmax = "/content/drive/MyDrive/2022 II/4. Técnicas de programación 2/TPM_II/datos/PISCO_temperature/tx/PISCOdtx_v1.1.nc"
PISCO_tmax = xr.open_dataset(ruta_tmax)
PISCO_tmax

ruta_tmin = "/content/drive/MyDrive/2022 II/4. Técnicas de programación 2/Tareas Huerta/PISCO/piscov1p1(tmin).nc"
PISCO_tmin = xr.open_dataset(ruta_tmin, decode_times=False)
PISCO_tmin

PISCO_tmin = PISCO_tmin.rename({"X":"longitude","Y":"latitude","T":"time"})
PISCO_tmin #corregir el tema de las coordenadas

PISCO_tmin["time"] = pd.date_range(start="1981-01-01",freq="1M", periods= 432)
PISCO_tmin

"""# anomalia t max

## tmax 1981-2010
"""

tmax_filtro=PISCO_tmax.sel(time=slice('1981-06-01T00:00:00.000000000','2010-05-31T12:00:00.000000000'))
tmax_filtro

tmax_filtro=tmax_filtro.sel(latitude=slice(-12.55,-18.65),
                             longitude=slice(-73.55,-67.55))

tmax_acum = tmax_filtro.tx.mean(dim='time')
tmax_acum

"""## tmax 1981-2016"""

tmax_anual=PISCO_tmax.sel(time=slice('1981-06-01T00:00:00.000000000','2016-05-31T12:00:00.000000000'))
tmax_anual

tmax_anual=tmax_anual.sel(latitude=slice(-12.55,-18.65),
                             longitude=slice(-73.55,-67.55))

tmax_anual = tmax_anual.tx.groupby('time.year').mean(dim='time')
tmax_anual

"""## creando anomalia"""

tmax_anom = (tmax_anual - tmax_acum).to_dataset(name="tx")
tmax_anom

anom_tx_df = tmax_anom.mean(dim=("latitude","longitude")).to_dataframe()
anom_tx_df.head()

anom_tx_df["tx"].to_numpy()

len(anom_tx_df["tx"].to_numpy())

anom_tx_df.head()

"""## separacion de positivos y negativos"""

anom_pos_tx=anom_tx_df.copy()
anom_pos_tx[anom_pos_tx["tx"]<0]=np.NaN #valores negativos, NaN
anom_pos_tx.head()

anom_neg_tx=anom_tx_df.copy()
anom_neg_tx[anom_neg_tx["tx"]>0]=np.NaN #valores negativos, NaN
anom_neg_tx.head()

"""## avance 1 grafica"""

fig, ax = plt.subplots(figsize=(15, 4))
x= np.arange(1981,2017,1)
y_pos=anom_pos_tx["tx"].to_numpy()
y_neg=anom_neg_tx["tx"].to_numpy()
ax.bar(x,y_pos, color="red")
ax.bar(x,y_neg, color="blue")
ax.set_ylabel("|C")
ax.set_xlabel("")
ax.set_ylim(-3.5,3)
ax.set_title("(a) Annual")
plt.axhline(y=0, color='black', linestyle='-')

"""# anom min temp

## tmin 1981-2010
"""

tmin_filtro=PISCO_tmin.sel(time=slice('1981-06-01T00:00:00.000000000','2010-05-31T12:00:00.000000000'))
tmin_filtro

tmin_filtro=tmin_filtro.sel(latitude=slice(-12.55,-18.65),
                             longitude=slice(-73.55,-67.55))
tmin_filtro

tmin_acum = tmin_filtro.tmin.mean(dim='time') #1981-2010
tmin_acum

"""## tmin 1981-2016"""

tmin_anual=PISCO_tmin.sel(time=slice('1981-06-01T00:00:00.000000000','2016-05-31T12:00:00.000000000'))
tmin_anual

tmin_anual=tmin_anual.sel(latitude=slice(-12.55,-18.65),
                             longitude=slice(-73.55,-67.55))

tmin_anual = PISCO_tmin.tmin.groupby('time.year').mean(dim='time')
tmin_anual

"""## creando anomalia"""

tmin_anom = (tmin_anual - tmin_acum).to_dataset(name="tmin")
tmin_anom #segun la grafica es con respecto a 2010

anom_tmin_df = tmin_anom.mean(dim=("latitude","longitude")).to_dataframe()
anom_tmin_df.head()

"""## separacion de positivos y negativos"""

anom_pos_tmin=anom_tmin_df.copy()
anom_pos_tmin[anom_pos_tmin["tmin"]<0]=np.NaN

anom_neg_tmin=anom_tmin_df.copy()
anom_neg_tmin[anom_neg_tmin["tmin"]>0]=np.NaN

"""## avance 2 grafica"""

fig, ax = plt.subplots(figsize=(15, 4))
x= np.arange(1981,2017,1)
y_pos=anom_pos_tmin["tmin"].to_numpy()
y_neg=anom_neg_tmin["tmin"].to_numpy()
ax.bar(x,y_pos, color="red")
ax.bar(x,y_neg, color="blue")
ax.set_ylabel("|C")
ax.set_xlabel("")
ax.set_ylim(-3.5,3)
ax.set_title("(b) Annual")
plt.axhline(y=0, color='black', linestyle='-')

"""# RESULTADO"""

fig, axs = plt.subplots(2, 1, figsize=(15, 9))
#Anom tmax
ax = axs[0]
x= np.arange(1981,2017,1)
y_pos=anom_pos_tx["tx"].to_numpy()
y_neg=anom_neg_tx["tx"].to_numpy()
ax.bar(x,y_pos, color="red")
ax.bar(x,y_neg, color="blue")
ax.set_ylabel("|C")
ax.set_xlabel("")
ax.set_ylim(-2,2)
ax.set_title("(a) Maximim temperature Annual")
plt.axhline(y=0, color='black', linestyle='-')

#anom tmin
ax2 = axs[1]
x2= np.arange(1981,2017,1)
y2_pos=anom_pos_tmin["tmin"].to_numpy()
y2_neg=anom_neg_tmin["tmin"].to_numpy()
ax2.bar(x2,y2_pos, color="red")
ax2.bar(x2,y2_neg, color="blue")
ax2.set_ylabel("°C")
ax2.set_xlabel("")
ax2.set_ylim(-2,2)
ax2.set_title("(b) Minimum Temperature Annual")
plt.axhline(y=0, color='black', linestyle='-')